x-client-env: &client-env
  SERVER_URL: http://server:8000
  CUDA_VISIBLE_DEVICES: -1
  CONFIG_PATH: config/default.yaml
  CLIENT_TYPE: standard
  TF_NUM_THREADS: 4
  TF_CPP_MIN_LOG_LEVEL: 1

x-client-base: &client-base
  build:
    context: .
    dockerfile: dockerfiles/client.Dockerfile
  volumes:
    - ./:/app
  depends_on:
    server:
      condition: service_healthy
  networks:
    - fl_network
  deploy:
    resources:
      limits:
        cpus: 4.0
        memory: 2G

services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/server.Dockerfile
    environment:
      - CUDA_VISIBLE_DEVICES=-1
      - CONFIG_PATH=config/default.yaml
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    networks:
      - fl_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/status"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: 2.0
          memory: 3G
        reservations:
          cpus: 1.0
          memory: 3G
          
  client_1:
    <<: *client-base
    environment:
      <<: *client-env
      CLIENT_ID: 1
      
  client_2:
    <<: *client-base
    environment:
      <<: *client-env
      CLIENT_ID: 2
    command: ["sh", "-c", "sleep 10 && python run_client.py"]
      
  client_3:
    <<: *client-base
    environment:
      <<: *client-env
      CLIENT_ID: 3
    command: ["sh", "-c", "sleep 20 && python run_client.py"]
      
  client_4:
    <<: *client-base
    environment:
      <<: *client-env
      CLIENT_ID: 4
    command: ["sh", "-c", "sleep 30 && python run_client.py"]
      
  client_5:
    <<: *client-base
    environment:
      <<: *client-env
      CLIENT_ID: 5
    command: ["sh", "-c", "sleep 40 && python run_client.py"]
      
networks:
  fl_network:
    driver: bridge